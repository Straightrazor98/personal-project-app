import { useState } from "react";
import { ProjectWithRelations } from "@/lib/types";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { PlusCircle, CheckCircle2, Tag } from "lucide-react";
import { Checkbox } from "@/components/ui/checkbox";
import { 
  Card, 
  CardContent,
  CardHeader,
  CardTitle,
  CardDescription,
  CardFooter 
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Skeleton } from "@/components/ui/skeleton";
import { CreateSimpleProjectDialog } from "./CreateSimpleProjectDialog";
import { ProjectNotes } from "./ProjectNotes";

interface SimpleProjectListProps {
  projects: ProjectWithRelations[];
  isLoading: boolean;
  onMarkComplete: (id: number, completed: boolean) => void;
  onCreateProject?: (data: { title: string; description: string }) => void;
  isCreating?: boolean;
  showCreateButton?: boolean;
}

const SimpleProjectList = ({ 
  projects, 
  isLoading,
  onMarkComplete,
  onCreateProject,
  isCreating = false,
  showCreateButton = true
}: SimpleProjectListProps) => {
  const [searchTerm, setSearchTerm] = useState("");
  
  // Filter projects based on search term
  const filteredProjects = projects.filter(project => {
    if (searchTerm && !project.title.toLowerCase().includes(searchTerm.toLowerCase()) && 
        !project.description?.toLowerCase().includes(searchTerm.toLowerCase())) {
      return false;
    }
    return true;
  });

  // Loading skeleton UI
  if (isLoading) {
    return (
      <div className="space-y-4">
        <Skeleton className="h-10 w-full" />
        {[1, 2, 3].map(i => (
          <Skeleton key={i} className="h-32 w-full" />
        ))}
      </div>
    );
  }

  return (
    <div className="space-y-4">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold">{projects.length > 0 ? 'Your Projects' : 'No Projects'}</h2>
        {showCreateButton && (
          onCreateProject ? (
            <CreateSimpleProjectDialog 
              onSubmit={onCreateProject} 
              isLoading={isCreating} 
            />
          ) : (
            <Button className="flex items-center" disabled>
              <PlusCircle className="mr-2 h-4 w-4" />
              Add Project
            </Button>
          )
        )}
      </div>
      
      <div className="relative rounded-md shadow-sm mb-6">
        <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
            <circle cx="11" cy="11" r="8"></circle>
            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
          </svg>
        </div>
        <Input
          className="pl-10"
          placeholder="Search projects"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </div>
      
      {filteredProjects.length > 0 ? (
        <div className="space-y-4">
          {filteredProjects.map(project => (
            <Card key={project.id} className="overflow-hidden">
              <div className="flex">
                <div className="p-4 flex items-start">
                  <Checkbox 
                    id={`complete-${project.id}`}
                    checked={project.completed}
                    onCheckedChange={() => onMarkComplete(project.id, !project.completed)}
                    className="mt-1"
                  />
                </div>
                <div className="py-3 flex-1">
                  <div className="flex justify-between">
                    <div className="font-medium text-lg">{project.title}</div>
                    <ProjectNotes projectId={project.id} projectTitle={project.title} />
                  </div>
                  
                  {project.description && (
                    <p className="text-muted-foreground text-sm line-clamp-2 mt-1">
                      {project.description}
                    </p>
                  )}
                  
                  {project.tagName && (
                    <div className="flex mt-2">
                      <Badge 
                        variant="outline" 
                        className="flex items-center"
                        style={{ 
                          borderColor: project.tagColor || 'currentColor',
                          color: project.tagColor || 'currentColor'
                        }}
                      >
                        <Tag className="h-3 w-3 mr-1" />
                        {project.tagName}
                      </Badge>
                    </div>
                  )}
                  
                  <div className="mt-3 text-sm border-t pt-2">
                    <div className="flex gap-1">
                      <CheckCircle2 className="h-4 w-4 text-green-500 mt-0.5" />
                      <span className="font-medium">Next Step:</span>
                      <div>
                        {project.description ? (
                          <span>{project.description}</span>
                        ) : (
                          <span className="text-muted-foreground italic">No next steps defined</span>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </Card>
          ))}
        </div>
      ) : (
        <div className="text-center py-12 border rounded-lg">
          <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12 mx-auto text-gray-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1" strokeLinecap="round" strokeLinejoin="round">
            <path d="M13 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V9l-7-7z"></path>
            <path d="M13 3v6h6"></path>
          </svg>
          <h3 className="mt-2 text-lg font-medium text-gray-900">No projects found</h3>
          <p className="mt-1 text-gray-500">
            {searchTerm ? 'Try adjusting your search.' : 'Get started by creating your first project.'}
          </p>
          <Button className="mt-4">
            <PlusCircle className="mr-2 h-4 w-4" />
            Add Your First Project
          </Button>
        </div>
      )}
    </div>
  );
};

export default SimpleProjectList;
